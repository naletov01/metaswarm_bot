# menu.py

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
import config
from config import ADMIN_IDS
from config import COST_KLING_STD, COST_KLING_PRO, COST_KLING_MAST, COST_VEO, MAX_INVITES
from typing import Tuple
from db     import SessionLocal, get_user

# ‚Äî‚Äî‚Äî CALLBACK_DATA –ö–û–ù–°–¢–ê–ù–¢–´ ‚Äî‚Äî‚Äî
CB_MAIN            = "menu:main"
CB_GENERATION      = "menu:generation"
CB_PROFILE         = "menu:profile"
# CB_INFO            = "menu:info"
CB_PARTNER         = "menu:partner"

CB_SUB_PREMIUM     = "menu:sub_premium"
CB_BUY_CREDITS     = "menu:buy_credits"
CB_FREE_GEN        = "menu:free_gen"

CB_SUB_3D          = "menu:sub_3d"
CB_SUB_MONTH       = "menu:sub_month"
CB_SUB_YEAR        = "menu:sub_year"

CB_CRED_STD        = "menu:cred_std"
CB_CRED_PRO        = "menu:cred_pro"
CB_CRED_MAX        = "menu:cred_max"

# ‚Äî‚Äî‚Äî CALLBACK_DATA –î–õ–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò ‚Äî‚Äî‚Äî
CB_GEN_KLING_STD   = "gen:kling_standard"
CB_GEN_KLING_PRO   = "gen:kling_pro"
CB_GEN_KLING_MAST  = "gen:kling_master"
CB_GEN_VEO         = "gen:veo"

MODEL_MAP = {
    CB_GEN_KLING_STD:  "kling-standard",
    CB_GEN_KLING_PRO:  "kling-pro",
    CB_GEN_KLING_MAST: "kling-master",
    CB_GEN_VEO:        "veo",
}

# ‚Äî‚Äî‚Äî –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨ ‚Äî‚Äî‚Äî‚Äî‚Äî
def _maybe_lock(text: str, has_premium: bool) -> str:
    """–ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∂–∏ –∑–∞–º–∫–∞ —Å–ø–µ—Ä–µ–¥–∏."""
    return ("üîí " + text) if not has_premium else text

# ‚Äî‚Äî‚Äî –û–ü–ò–°–ê–ù–ò–ï –í–°–ï–• –ú–ï–ù–Æ ‚Äî‚Äî‚Äî
MENUS = {
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    CB_MAIN: {
        "text": (
            "üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
            "–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç–≤–æ—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –æ–∂–∏–≤–∞–µ—Ç –∏ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ —Ç—Ä–µ–Ω–¥–æ–≤–æ–µ –≤–∏–¥–µ–æ –¥–ª—è TikTok –∏–ª–∏ Reels.\n\n"
            "üìΩ –ù–∞—à –±–æ—Ç —Å–¥–µ–ª–∞–µ—Ç —ç—Ç–æ –∑–∞ —Ç–µ–±—è:\n"
            "‚§∑ –ó–∞–≥—Ä—É–∑–∏ —Ñ–æ—Ç–æ –∏ –Ω–∞–ø–∏—à–∏ –ø–∞—Ä—É —Å–ª–æ–≤\n"
            "‚§∑ –ß–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç –ø–æ–ª—É—á–∏ —Å—Ç–∏–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ\n"
            "‚§∑ –î–µ–ª–∏—Å—å –∏–º –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö –∏ —Å–æ–±–∏—Ä–∞–π –ø—Ä–æ—Å–º–æ—Ç—Ä—ã\n\n"
            "üî• –ü–æ–ø—Ä–æ–±—É–π –≤—Å—ë –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å —Ç–µ—Å—Ç–æ–≤–æ–π –ø–æ–¥–ø–∏—Å–∫–æ–π –Ω–∞ <b>3 –¥–Ω—è –∑–∞ $1.</b>\n\n"
            "üÜì –ò–ª–∏ –ø—Ä–∏–≥–ª–∞—Å–∏ <b>5 –¥—Ä—É–∑–µ–π</b> –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n\n"
            "üëâ –≠—Ç–æ –¥–µ—à–µ–≤–ª–µ —á–∞—à–∫–∏ –∫–æ—Ñ–µ, –Ω–æ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–∞—á–∞–ª–æ–º —Ç–≤–æ–µ–≥–æ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞!"
        ),
        "buttons": [
            [InlineKeyboardButton("üéû –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ", callback_data=CB_GENERATION),],
            [InlineKeyboardButton("üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",    callback_data=CB_SUB_PREMIUM),],
            [InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å",          callback_data=CB_PROFILE),],
            # [InlineKeyboardButton("‚ÑπÔ∏è –û –º–æ–¥–µ–ª—è—Ö",        callback_data=CB_INFO),],
            [InlineKeyboardButton("ü§ë –ü–∞—Ä—Ç–Ω—ë—Ä–∫–∞",        callback_data=CB_PARTNER),],
        ],
    },

    # –ú–µ–Ω—é ¬´–ì–µ–Ω–µ—Ä–∞—Ü–∏—è¬ª
    CB_GENERATION: {
        "text": (
            "üéû <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ</b>\n–°–∞–º—ã–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –≤–∏–¥–µ–æ.\n\n"
            "üé¨ <b>Kling Standar:</b>\n\n–ë—ã—Å—Ç—Ä–∞—è –∏ –¥–æ—Å—Ç—É–ø–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –±–∞–∑–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤ –∏ –ø—Ä–æ—Å—Ç—ã—Ö –∏–¥–µ–π.\n\n"
            "üé• <b>Kling Pro:</b>\n\n–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π –∏ –∫–∞—á–µ—Å—Ç–≤–æ–º. –û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ä–µ–∞–ª–∏–∑–º–∞.\n\n"
            "üèÜ <b>Kling Master:</b>\n\n–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω–æ—Å—Ç—å. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ª—É—á—à–µ–µ –≤–∏–¥–µ–æ –∏–∑ —Å–≤–æ–∏—Ö —Ñ–æ—Ç–æ.\n\n"
            "üî• <b>Veo3:</b>\n\n–ú–æ–¥–µ–ª—å –æ—Ç Google –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ —Å –æ–∑–≤—É—á–∫–æ–π –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é. –°–æ–∑–¥–∞—ë—Ç —è—Ä–∫–∏–µ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–æ–ª–∏–∫–∏ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:"
        ),
        # –≤ render_menu –º—ã –ø–æ–¥—Å—Ç–∞–≤–∏–º –∑–∞–º–æ–∫, –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º–∞
        "buttons": [
            [ InlineKeyboardButton("üé¨ Kling Standard üé¨", callback_data=CB_GEN_KLING_STD) ],
            [ InlineKeyboardButton("üé• Kling Pro üé•",       callback_data=CB_GEN_KLING_PRO) ],
            [ InlineKeyboardButton("üèÜ Kling Master üèÜ",    callback_data=CB_GEN_KLING_MAST) ],
            [ InlineKeyboardButton("üî• Veo3 —Å–æ –∑–≤—É–∫–æ–º üî•",  callback_data=CB_GEN_VEO) ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",              callback_data=CB_MAIN) ],
        ],
    },

    # # –ú–µ–Ω—é ¬´–û –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö¬ª
    # CB_INFO: {
    #     "text": "‚ÑπÔ∏è <b>–û –≥–µ–Ω–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–æ–¥–µ–ª—è—Ö</b>\n\n–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤:",
    #     "buttons": [
    #         [ InlineKeyboardButton("üé¨ Kling Standard üé¨", callback_data=CB_GEN_KLING_STD) ],
    #         [ InlineKeyboardButton("üé• Kling Pro üé•",       callback_data=CB_GEN_KLING_PRO) ],
    #         [ InlineKeyboardButton("üèÜ Kling Master üèÜ",    callback_data=CB_GEN_KLING_MAST) ],
    #         [ InlineKeyboardButton("üî• Veo3 —Å–æ –∑–≤—É–∫–æ–º üî•",  callback_data=CB_GEN_VEO) ],
    #         [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",              callback_data=CB_MAIN) ],
    #     ],
    # },

    # –ú–µ–Ω—é ¬´–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞¬ª
    CB_PARTNER: {
        "text": (
            "ü§ë <b>–ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
            "–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏!\n\n"
            "üìå –£—Å–ª–æ–≤–∏—è:\n"
            "‚Üí –°–Ω–∏–º–∞–π—Ç–µ –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –∏ –¥–µ–ª–∏—Ç–µ—Å—å –∏–º–∏ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö\n"
            "‚Üí –î–æ–±–∞–≤–ª—è–π—Ç–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É\n"
            "‚Üí –ó–∞ –∫–∞–∂–¥—É—é –æ–ø–ª–∞—Ç—É –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>50%</b> –æ—Ç —Å—É–º–º—ã\n\n"
            "–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
            f"`https://example.com/ref={{{{user_id}}}}`"
        ),
        "buttons": [
            [ InlineKeyboardButton("üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", callback_data=CB_PARTNER + ":copy") ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",              callback_data=CB_MAIN) ],
        ],
    },

    # –ú–µ–Ω—é ¬´–ü–æ–¥–ø–∏—Å–∫–∞ Premium¬ª
    CB_SUB_PREMIUM: {
        "text": (
            "üî• <b>–ü–æ–¥–ø–∏—Å–∫–∞ Premium</b>\n\n"
            "–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –±–æ—Ç–∞:\n\n"
            "‚§∑ –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ (Kling Standard, Pro, Master –∏ Veo3)\n"
            "‚§∑ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π\n"
            "‚§∑ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å (–≤–∞—à–∏ –≤–∏–¥–µ–æ —Å–æ–∑–¥–∞—é—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ)\n"
            "‚§∑ –ö–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            "‚§∑ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤\n\n"
            "üçì –õ–∏–º–∏—Ç—ã:\n"
            "‚Üí Kling Standard: 120 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –≥–æ–¥\n"
            "‚Üí Kling Pro: 80 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –≥–æ–¥\n"
            "‚Üí Kling Master: 40 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –≥–æ–¥\n"
            "‚Üí Veo3: 20 –≥–µ–Ω–µ—Ä–∞—Ü–∏–π –≤ –≥–æ–¥\n\n"
            "üëâ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ –Ω–∏–∂–µ:"
        ),
        "buttons": [
            [ InlineKeyboardButton("üí∞ 3 –¥–Ω—è | 1 $",      callback_data=CB_SUB_3D) ],
            [ InlineKeyboardButton("üî• –ú–µ—Å—è—Ü | 10 $",     callback_data=CB_SUB_MONTH) ],
            [ InlineKeyboardButton("üíé –ì–æ–¥ | 65 $", callback_data=CB_SUB_YEAR) ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",             callback_data=CB_PROFILE) ],
        ],
    },

    # –ú–µ–Ω—é ¬´–ö—Ä–µ–¥–∏—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏¬ª
    CB_BUY_CREDITS: {
        "text": "üí≥ <b>–ü–∞–∫–µ—Ç—ã –∫—Ä–µ–¥–∏—Ç–æ–≤</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–±—ä—ë–º:",
        "buttons": [
            [ InlineKeyboardButton("üí∞ Standart | 10 $", callback_data=CB_CRED_STD) ],
            [ InlineKeyboardButton("üî• Pro | 30 $",      callback_data=CB_CRED_PRO) ],
            [ InlineKeyboardButton("üíé Max | 50 $",      callback_data=CB_CRED_MAX) ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",            callback_data=CB_PROFILE) ],
        ],
    },

    # –ú–µ–Ω—é ¬´–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏¬ª
    CB_FREE_GEN: {
        "text": (
            "üÜì <b>–ë–æ–Ω—É—Å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞</b>\n\n"
            "–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã!\n\n"
            "üìå –£—Å–ª–æ–≤–∏—è:\n"
            "‚Üí –ó–∞ –∫–∞–∂–¥—ã—Ö 5 –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 1 –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ\n"
            "‚Üí –ú–∞–∫—Å–∏–º—É–º –º–æ–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 10 –¥—Ä—É–∑–µ–π (–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ 2 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π)\n\n"
            "–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n"
            f"`https://example.com/free={{{{user_id}}}}`"
        ),
        "buttons": [
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=CB_PROFILE) ],
        ],
    },

    # –û–ø–ª–∞—Ç—ã: 3 –¥–Ω—è / –ú–µ—Å—è—Ü / –ì–æ–¥
    CB_SUB_3D: {
        "text": (
            "üí∞ <b>3 –¥–Ω—è –ø–æ–¥–ø–∏—Å–∫–∞</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n\n"
            "‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–¥—è –Ω–∞ –æ–ø–ª–∞—Ç—É –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–º —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π."
        ),
        "buttons": [
            [ InlineKeyboardButton("TG Stars | 125 ‚≠ê", url="https://example.com") ],
            [ InlineKeyboardButton("Stripe | 1 $",       url="https://example.com") ],
            [ InlineKeyboardButton("Crypto | 1 $",       url="https://example.com") ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",            callback_data=CB_SUB_PREMIUM) ],
        ],
    },
    CB_SUB_MONTH: {
        "text": (
            "üî• <b>–ú–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n\n"
            "‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–¥—è –Ω–∞ –æ–ø–ª–∞—Ç—É –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–º —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π."
        ),
        "buttons": [
            [ InlineKeyboardButton("TG Stars | 1000 ‚≠ê", url="https://example.com") ],
            [ InlineKeyboardButton("Stripe | 10 $",      url="https://example.com") ],
            [ InlineKeyboardButton("Crypto | 10 $",      url="https://example.com") ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",            callback_data=CB_SUB_PREMIUM) ],
        ],
    },
    CB_SUB_YEAR: {
        "text": (
            "üíé <b>–ì–æ–¥–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</b>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:\n\n"
            "‚ö†Ô∏è –ü–µ—Ä–µ—Ö–æ–¥—è –Ω–∞ –æ–ø–ª–∞—Ç—É –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–æ–º —Ä–µ–∫—É—Ä—Ä–µ–Ω—Ç–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π."
        ),
        "buttons": [
            [ InlineKeyboardButton("TG Stars | 3500 ‚≠ê", url="https://example.com") ],
            [ InlineKeyboardButton("Stripe | 65 $", url="https://example.com") ],
            [ InlineKeyboardButton("Crypto | 65 $", url="https://example.com") ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",             callback_data=CB_SUB_PREMIUM) ],
        ],
    },

    # –ü–∞–∫–µ—Ç—ã –∫—Ä–µ–¥–∏—Ç–æ–≤
    CB_CRED_STD: {
        "text": "üí∞ <b>–ü–∞–∫–µ—Ç Standart</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:",
        "buttons": [
            [ InlineKeyboardButton("TG Stars | 1000 ‚≠ê", url="https://example.com") ],
            [ InlineKeyboardButton("Stripe | 10 $",      url="https://example.com") ],
            [ InlineKeyboardButton("Crypto | 10 $",      url="https://example.com") ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",             callback_data=CB_BUY_CREDITS) ],
        ],
    },
    CB_CRED_PRO: {
        "text": "üî• <b>–ü–∞–∫–µ—Ç Pro</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:",
        "buttons": [
            [ InlineKeyboardButton("TG Stars | 2500 ‚≠ê", url="https://example.com") ],
            [ InlineKeyboardButton("Stripe | 30 $",      url="https://example.com") ],
            [ InlineKeyboardButton("Crypto | 30 $",      url="https://example.com") ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",             callback_data=CB_BUY_CREDITS) ],
        ],
    },
    CB_CRED_MAX: {
        "text": "üíé <b>–ü–∞–∫–µ—Ç Max</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:",
        "buttons": [
            [ InlineKeyboardButton("TG Stars | 3500 ‚≠ê", url="https://example.com") ],
            [ InlineKeyboardButton("Stripe | 50 $",      url="https://example.com") ],
            [ InlineKeyboardButton("Crypto | 50 $",      url="https://example.com") ],
            [ InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥",             callback_data=CB_BUY_CREDITS) ],
        ],
    },
}

# –ú–µ–Ω—é ¬´–ü—Ä–æ—Ñ–∏–ª—å¬ª
def get_profile_text(user_id: int) -> Tuple[str, InlineKeyboardMarkup]:
    
    with SessionLocal() as db:
        user = get_user(db, user_id)
    
        c = user.credits + user.bonus_credits
        lines = [
            "üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å</b>\n",
            f"–ö—Ä–µ–¥–∏—Ç–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {c}\n",
            "–ì–µ–Ω–µ—Ä–∞—Ü–∏–π –æ—Å—Ç–∞–ª–æ—Å—å:",
            f"‚Üí Kling Standard: {c // COST_KLING_STD}",
            f"‚Üí Kling Pro:      {c // COST_KLING_PRO}",
            f"‚Üí Kling Master:   {c // COST_KLING_MAST}",
            f"‚Üí Veo3:           {c // COST_VEO}\n",
            f"–ü—Ä–∏–≥–ª–∞—à—ë–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π: {user.invited_count}/{MAX_INVITES}",
            f"–ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–π (–±–æ–Ω—É—Å): {user.bonus_credits}\n",
            f"–ü–æ–¥–ø–∏—Å–∫–∞ Premium: {'–ê–∫—Ç–∏–≤–Ω–∞ ‚úÖ' if user.premium else '–ù–µ –∞–∫—Ç–∏–≤–Ω–∞ ‚ùå'}"
        ]
        if user.premium and user.premium_until:
              lines.append(f"‚àô –°—Ä–æ–∫ –∏—Å—Ç–µ—á–µ–Ω–∏—è: {user.premium_until.strftime('%Y-%m-%d')}")
        lines.append("\nüí° –ï—Å–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å ‚Äî –∏—Ö –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –¥–æ–∫—É–ø–∏—Ç—å!")
        
        buttons = [
            ("üî• –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", CB_SUB_PREMIUM),
            ("üí≥ –ö—É–ø–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã", CB_BUY_CREDITS),
            ("üÜì –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏", CB_FREE_GEN),
            ("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", CB_MAIN),
        ]
        keyboard = InlineKeyboardMarkup([[InlineKeyboardButton(t, callback_data=cb)] for t, cb in buttons])
        
        return "\n".join(lines), keyboard


# ‚Äî‚Äî‚Äî –§–£–ù–ö–¶–ò–Ø –û–¢–†–ò–°–û–í–ö–ò –ú–ï–ù–Æ ‚Äî‚Äî‚Äî
def render_menu(menu_key: str, user_id: int) -> (str, InlineKeyboardMarkup):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç (text, InlineKeyboardMarkup) –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –º–µ–Ω—é.
    –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–º–æ–∫ 'üîí' –ø–µ—Ä–µ–¥ –ø—É–Ω–∫—Ç–∞–º–∏ –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏,
    –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–∏.
    """
    if menu_key == CB_PROFILE:
        # get_profile_text –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (text, InlineKeyboardMarkup)
        return get_profile_text(user_id)
        
    m = MENUS[menu_key]
    has_premium = (user_id in ADMIN_IDS) or (config.user_limits.get(user_id, 0) > 0)  # <- –ø—Ä–∏–º–µ—Ä –ø—Ä–æ–≤–µ—Ä–∫–∏
    buttons = []

    # –µ—Å–ª–∏ —ç—Ç–æ –º–µ–Ω—é –ì–µ–Ω–µ—Ä–∞—Ü–∏–∏ ‚Äî —Å—Ç–∞–≤–∏–º –∑–∞–º–æ–∫
    if menu_key == CB_GENERATION:
        for row in m["buttons"]:
            orig_text = row[0].text
            cb        = row[0].callback_data
            if cb == CB_MAIN:
                btn_text = orig_text
            else:
                btn_text = _maybe_lock(orig_text, has_premium)
            buttons.append([InlineKeyboardButton(btn_text, callback_data=cb)])
    else:
        buttons = m["buttons"]

    markup = InlineKeyboardMarkup(buttons)
    # –∑–∞–º–µ–Ω—è–µ–º {{user_id}} –≤ —Ç–µ–∫—Å—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID
    text = m["text"].replace("{{user_id}}", str(user_id))
    return text, markup

